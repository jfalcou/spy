##==================================================================================================
##  SPY - C++ Informations Broker
##  Copyright : SPY Project Contributors
##  SPDX-License-Identifier: BSL-1.0
##==================================================================================================
name: SPY - Unit Tests
on:
  pull_request:
    branches:
      - main

concurrency:
  group: spy-unit-${{ github.ref }}
  cancel-in-progress: true

jobs:

  ##################################################################################################
  ## Mac OS X Targets
  ##################################################################################################
  macosx:
    runs-on: [macos-14]
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { comp: clang , arch: aarch64, mode: Debug    }
        - { comp: clang , arch: aarch64, mode: Release  }
    steps:
      - name: Fetch current branch
        uses: actions/checkout@v4.1.1
      - name: Running CMake for ${{ matrix.cfg.comp }} in ${{ matrix.cfg.mode }} mode
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE="${{ matrix.cfg.mode }}"  \
                -DCMAKE_TOOLCHAIN_FILE=../test/toolchain/${{ matrix.cfg.comp }}.${{ matrix.cfg.arch }}.cmake
      - name: Compiling Unit Tests
        run:  cd build && make spy-test -j 2
      - name: Running Unit Tests
        run: cd build && ctest --verbose --output-on-failure -j 2

  ##################################################################################################
  ## Windows Targets
  ##################################################################################################
  msvc:
    runs-on: [windows-2022]
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { mode: Debug   }
        - { mode: Release }

    steps:
      - name: Fetch current branch
        uses: actions/checkout@v4.1.1
      - name: Running CMake for MSVC ${{ matrix.cfg.mode }}
        run: |
          mkdir build && cd build
          cmake -G "Visual Studio 17 2022" -A x64 ..
      - name: Compiling Unit Tests
        run:  |
          cd build
          cmake --build . --target spy-test --config ${{ matrix.cfg.mode }} --parallel 2
      - name: Running Tests
        run: |
          cd build
          ctest --verbose -C ${{ matrix.cfg.mode }} --output-on-failure

  clang-cl:
    runs-on: [windows-2022]
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { mode: Debug   }
        - { mode: Release }

    steps:
      - name: Fetch current branch
        uses: actions/checkout@v4.1.1
      - name: Running CMake for Clang CL ${{ matrix.cfg.mode }}
        run: |
          mkdir build && cd build
          cmake -G "Visual Studio 17 2022" -T ClangCL -A x64 ..
      - name: Compiling Unit Tests
        run:  |
          cd build
          cmake --build . --target spy-test --config ${{ matrix.cfg.mode }} --parallel 2
      - name: Running Tests
        run: |
          cd build
          ctest --verbose -C ${{ matrix.cfg.mode }} --output-on-failure

  ##################################################################################################
  ## WASM targets
  ##################################################################################################
  wasm:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jfalcou/compilers:v9
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { comp: clang , arch: wasm, mode: Debug    }
        - { comp: clang , arch: wasm, mode: Release  }
    steps:
      - name: Fetch current branch
        uses: actions/checkout@v4.1.1
      - name: Running CMake for ${{ matrix.cfg.comp }} in ${{ matrix.cfg.mode }} mode
        run: |
          mkdir build && cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE="${{ matrix.cfg.mode }}"  \
                -DCMAKE_TOOLCHAIN_FILE=../test/toolchain/${{ matrix.cfg.comp }}.${{ matrix.cfg.arch }}.cmake
      - name: Compiling Unit Tests
        run:  cd build && ninja spy-test -j 2
      - name: Running Unit Tests
        run: cd build && ctest --verbose --output-on-failure -j 2

  ##################################################################################################
  ## RISC-V targets
  ##################################################################################################
  riscv:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jfalcou/compilers:v9
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { comp: clang , arch: rvv128, mode: Debug    }
        - { comp: clang , arch: rvv128, mode: Release  }
    steps:
      - name: Fetch current branch
        uses: actions/checkout@v4.1.1
      - name: Running CMake for ${{ matrix.cfg.comp }} in ${{ matrix.cfg.mode }} mode
        run: |
          mkdir build && cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE="${{ matrix.cfg.mode }}"  \
                -DCMAKE_TOOLCHAIN_FILE=../test/toolchain/${{ matrix.cfg.comp }}.${{ matrix.cfg.arch }}.cmake
      - name: Compiling Unit Tests
        run:  cd build && ninja spy-test -j 2
      - name: Running Unit Tests
        run: cd build && ctest --verbose --output-on-failure -j 2

  ##################################################################################################
  ## CUDA targets
  ##################################################################################################
  nvcc:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { comp: nvcc    , opt: "" }
        - { comp: clang++ , opt: "--cuda-gpu-arch=sm_75 -lcudart_static -L/opt/cuda/lib64/ -ldl -lrt -pthread"  }
    steps:
      - name: Fetch current branch
        uses: actions/checkout@v4.1.1
      - name: Compiling Unit Tests with ${{ matrix.cfg.comp }}
        run:  |
              mkdir build && cd build
              ${{ matrix.cfg.comp }} ${{ matrix.cfg.opt }} ../test/unit/accelerator.cu -std=c++20 -I../include -o accelerator.device.exe
              ${{ matrix.cfg.comp }} ${{ matrix.cfg.opt }} ../test/unit/accelerator.cpp -std=c++20 -I../include -o accelerator.host.exe
              ${{ matrix.cfg.comp }} ${{ matrix.cfg.opt }} ../test/unit/arch.cpp -std=c++20 -I../include -o arch.exe
              ${{ matrix.cfg.comp }} ${{ matrix.cfg.opt }} ../test/unit/compiler.cpp -std=c++20 -I../include -o compiler.exe
              ${{ matrix.cfg.comp }} ${{ matrix.cfg.opt }} ../test/unit/data_model.cpp -std=c++20 -I../include -o data_model.exe
              ${{ matrix.cfg.comp }} ${{ matrix.cfg.opt }} ../test/unit/libc.cpp -std=c++20 -I../include -o libc.exe
              ${{ matrix.cfg.comp }} ${{ matrix.cfg.opt }} ../test/unit/os.cpp -std=c++20 -I../include -o os.exe
              ${{ matrix.cfg.comp }} ${{ matrix.cfg.opt }} ../test/unit/simd.cpp -std=c++20 -I../include -o simd.exe
              ${{ matrix.cfg.comp }} ${{ matrix.cfg.opt }} ../test/unit/stdlib.cpp -std=c++20 -I../include -o stdlib.exe
      - name: Running Unit Tests
        run:  |
              cd build
              ./accelerator.device.exe && ./accelerator.host.exe && ./arch.exe && ./compiler.exe && ./data_model.exe && \
              ./libc.exe && ./os.exe && ./simd.exe && ./stdlib.exe

  ##################################################################################################
  ## DPC++ Target
  ##################################################################################################
  dpcpp:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jfalcou/compilers:sycl-v1
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { comp: dpcpp , arch: x86 , mode: Debug    }
        - { comp: dpcpp , arch: sycl, mode: Debug    }
        - { comp: dpcpp , arch: x86 , mode: Release  }
        - { comp: dpcpp , arch: sycl, mode: Release  }
    steps:
      - name: Fetch current branch
        uses: actions/checkout@v4.1.1
      - name: Running CMake for ${{ matrix.cfg.comp }} in ${{ matrix.cfg.mode }} mode
        run: |
          source /opt/intel/oneapi/setvars.sh
          mkdir build && cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE="${{ matrix.cfg.mode }}"  \
                -DCMAKE_TOOLCHAIN_FILE=../test/toolchain/${{ matrix.cfg.comp }}.${{ matrix.cfg.arch }}.cmake
      - name: Compiling Unit Tests
        run:  cd build && ninja spy-test -j 2
      - name: Running Unit Tests
        run: cd build && ctest --verbose --output-on-failure -j 2

  ##################################################################################################
  ## Clang targets
  ##################################################################################################
  clang:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jfalcou/compilers:v9
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { comp: clang , arch: x86, mode: Debug    }
        - { comp: clang , arch: x86, mode: Release  }
    steps:
      - name: Fetch current branch
        uses: actions/checkout@v4.1.1
      - name: Running CMake for ${{ matrix.cfg.comp }} in ${{ matrix.cfg.mode }} mode
        run: |
          mkdir build && cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE="${{ matrix.cfg.mode }}"  \
                -DCMAKE_TOOLCHAIN_FILE=../test/toolchain/${{ matrix.cfg.comp }}.${{ matrix.cfg.arch }}.cmake
      - name: Compiling Unit Tests
        run:  cd build && ninja spy-test -j 2
      - name: Running Unit Tests
        run: cd build && ctest --verbose --output-on-failure -j 2

  ##################################################################################################
  ## gcc targets
  ##################################################################################################
  gcc:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jfalcou/compilers:v9
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { comp: gcc , arch: x86         , opts:           , mode: Debug   }
        - { comp: gcc , arch: x86         , opts:           , mode: Release }
        - { comp: gcc , arch: aarch64     , opts: -Wno-psabi, mode: Debug   }
        - { comp: gcc , arch: aarch64     , opts: -Wno-psabi, mode: Release }
        - { comp: gcc , arch: aarch64.sve , opts: -Wno-psabi, mode: Debug   }
        - { comp: gcc , arch: aarch64.sve , opts: -Wno-psabi, mode: Release }
        - { comp: gcc , arch: aarch64.sve2, opts: -Wno-psabi, mode: Debug   }
        - { comp: gcc , arch: aarch64.sve2, opts: -Wno-psabi, mode: Release }
        - { comp: gcc , arch: ppc64       , opts: -Wno-psabi, mode: Debug   }
        - { comp: gcc , arch: ppc64       , opts: -Wno-psabi, mode: Release }
    steps:
      - name: Fetch current branch
        uses: actions/checkout@v4.1.1
      - name: Running CMake for ${{ matrix.cfg.comp }} in ${{ matrix.cfg.mode }} mode
        run:  |
          mkdir build && cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE="${{ matrix.cfg.mode }}"  \
                -DCMAKE_TOOLCHAIN_FILE=../test/toolchain/${{ matrix.cfg.comp }}.${{ matrix.cfg.arch }}.cmake
      - name: Compile Unit Tests
        run:  cd build && ninja spy-test -j 2
      - name: Running Unit Tests
        run:  cd build && ctest --verbose --output-on-failure -j 2
