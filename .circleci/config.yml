##==================================================================================================
##  SPY - C++ Informations Broker
##  Copyright 2020-2021 Joel FALCOU
##
##  Licensed under the MIT License <http://opensource.org/licenses/MIT>.
##  SPDX-License-Identifier: MIT
##==================================================================================================
version: 2.1

commands:
  run_test:
    description: "Configure and run tests from a CMake Toolchain"
    parameters:
      desc:
        type: string
      tool:
        type: string
      proc:
        type: integer
        default: 8
    steps:
      - run:
          name: << parameters.desc >>
          command:                                                                  |
            mkdir -p build && cd build                                              &&
            cmake .. -G Ninja -DCMAKE_TOOLCHAIN_FILE=<< parameters.tool >>          &&
            ninja unit -j << parameters.proc >> && ctest  -j << parameters.proc >>

jobs:
  x86_clang_debug:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Debug tests
          tool: "../test/toolchain/clang.x86.debug.cmake"

  x86_clang_release:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Release tests
          tool: "../test/toolchain/clang.x86.release.cmake"

  ppc64le_clang_debug:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Debug tests
          tool: "../test/toolchain/clang.ppc64le.debug.cmake"

  ppc64le_clang_release:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Release tests
          tool: "../test/toolchain/clang.ppc64le.release.cmake"

  arm_clang_debug:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run:
          name: Update ARM processor model to emulate
          command:                                                                |
            mkdir -p build && cd build                                            &&
            echo "qemu-arm -cpu cortex-a15 \$@" >> run_arm && chmod +x run_arm    &&
            cd ..
      - run_test:
          desc: Running Debug tests
          tool: "../test/toolchain/clang.arm.debug.cmake"

  arm_clang_release:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run:
          name: Update ARM processor model to emulate
          command:                                                                |
            mkdir -p build && cd build                                            &&
            echo "qemu-arm -cpu cortex-a15 \$@" >> run_arm && chmod +x run_arm    &&
            cd ..
      - run_test:
          desc: Running Release tests
          tool: "../test/toolchain/clang.arm.release.cmake"

  aarch64_clang_debug:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Debug tests
          tool: "../test/toolchain/clang.aarch64.debug.cmake"

  aarch64_clang_release:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Release tests
          tool: "../test/toolchain/clang.aarch64.release.cmake"

  x86_gcc_debug:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Debug tests
          tool: "../test/toolchain/gcc.x86.debug.cmake"

  x86_gcc_release:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Release tests
          tool: "../test/toolchain/gcc.x86.release.cmake"

  ppc64_gcc_debug:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Debug tests
          tool: "../test/toolchain/gcc.ppc64.debug.cmake"

  ppc64_gcc_release:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Release tests
          tool: "../test/toolchain/gcc.ppc64.release.cmake"

  arm_gcc_debug:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run:
          name: Update ARM processor model to emulate
          command:                                                                |
            mkdir -p build && cd build                                            &&
            echo "qemu-arm -cpu cortex-a15 \$@" >> run_arm && chmod +x run_arm    &&
            cd ..
      - run_test:
          desc: Running Debug tests
          tool: "../test/toolchain/gcc.arm.debug.cmake"

  arm_gcc_release:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run:
          name: Update ARM processor model to emulate
          command:                                                                |
            mkdir -p build && cd build                                            &&
            echo "qemu-arm -cpu cortex-a15 \$@" >> run_arm && chmod +x run_arm    &&
            cd ..
      - run_test:
          desc: Running Release tests
          tool: "../test/toolchain/gcc.arm.release.cmake"

  aarch64_gcc_debug:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Debug tests
          tool: "../test/toolchain/gcc.aarch64.debug.cmake"

  aarch64_gcc_release:
    docker:
      - image: jfalcou/compilers:latest
    steps:
      - checkout
      - run_test:
          desc: Running Release tests
          tool: "../test/toolchain/gcc.aarch64.release.cmake"

workflows:
  version: 2
  build_and_test:
    jobs:
      - x86_clang_debug
      - ppc64le_clang_debug
      - arm_clang_debug
      - aarch64_clang_debug
      - x86_gcc_debug
      - ppc64_gcc_debug
      - arm_gcc_debug
      - aarch64_gcc_debug
      - x86_clang_release:
          requires:
            - x86_clang_debug
      - ppc64le_clang_release:
          requires:
            - ppc64le_clang_debug
      - arm_clang_release:
          requires:
            - arm_clang_debug
      - aarch64_clang_release:
          requires:
            - aarch64_clang_debug
      - x86_gcc_release:
          requires:
            - x86_gcc_debug
      - ppc64_gcc_release:
          requires:
            - ppc64_gcc_debug
      - arm_gcc_release:
          requires:
            - arm_gcc_debug
      - aarch64_gcc_release:
          requires:
            - aarch64_gcc_debug
